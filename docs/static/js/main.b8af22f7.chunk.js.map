{"version":3,"sources":["components/AddCategories.js","helpers/getGif.js","hooks/useFetchGifs.js","components/GifGridItems.js","components/GifGrid.js","GiftExpertApp.js","index.js"],"names":["AddCategories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","alert","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","gif","images","downsized_medium","title","useFetchGifs","loading","state","setState","useEffect","then","GifGridItems","className","src","alt","GifGrid","GiftExpertApp","props","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAyCeA,EApCO,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OACI,sBAAMC,SAdW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,KAEVO,MAAM,qCAKd,SACI,uBACEC,KAAK,OACLC,MAAOV,EACPW,SArBgB,SAACR,GAAD,OAAOF,EAAcE,EAAES,OAAOF,a,+BCP/CG,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,kGAEqFC,UAAUH,IAF/F,SAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIMA,EAAKC,OAJX,uBAIVC,EAJU,EAIVA,KAGHC,EAAOD,EAAKE,KAAK,SAAAC,GACtB,MAAO,CACJC,GAAID,EAAIC,GACRC,IAAKF,EAAIG,OAAOC,iBAAiBZ,IACjCa,MAAOL,EAAIK,UAXI,kBAcZP,GAdY,4CAAH,sDAiBJT,ICYAiB,EA3BM,SAAAhB,GAEjB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNU,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,qBAAU,WAEFrB,EAAOC,GACNqB,MAAM,SAAAX,GAAG,OACNS,EACA,CACAZ,KAAMG,EACNO,SAAS,SAIlB,CAACjB,IAGGkB,GCJII,EApBM,SAAC,GAAqB,EAApBX,GAAqB,IAAjBI,EAAgB,EAAhBA,MAAOH,EAAS,EAATA,IAI9B,OAEI,sBAAKW,UAAU,2EAAf,UACQ,qBAAKC,IAAKZ,EAAKW,UAAU,eAAeE,IAAKV,IAC7C,qBAAKQ,UAAU,YAAf,SACI,mBAAGA,UAAU,YAAb,SAA0BR,UCc/BW,EArBC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAGd,EAA6BgB,EAAahB,GAAnCiB,EAAP,EAAOA,QAAcT,EAArB,EAAgBD,KAEhB,OACI,sBAAKgB,UAAU,kBAAf,UACI,oBAAIA,UAAU,wBAAd,SAAuCvB,IAC3C,sBAAKuB,UAAU,4BAAf,UACMN,GAAW,mBAAGM,UAAU,qDAAb,wBACXf,EAAKC,KAAK,SAAAG,GAAG,OAAI,cAAC,EAAD,eAA+BA,GAAZA,EAAID,UAE9C,2BCYOgB,EAvBO,SAAAC,GAEpB,MAAoC3C,mBAAS,CAAC,mBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAIA,OACE,qCACE,gDACA,cAAC,EAAD,CAAeA,cAAeA,IAC9B,uBAEI6C,EAAWpB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAASA,SAAUA,GAAeA,UCdtC8B,G,MAAUC,SAASC,cAAc,UAEvCC,IAASC,OAAQ,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.b8af22f7.chunk.js","sourcesContent":["\r\n\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategories = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    //Capturar lo que se escribe en el input con el metodo onChange que recibe la funcion y trabaja con eventos\r\n    const handleInputChange = (e) => setInputValue(e.target.value);\r\n\r\n    //Trabajar con el enter y en el metodo onSubmit del componente\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        //comprobacion para que el input no este vacio o con espacios\r\n        if(inputValue.trim().length > 3){\r\n            \r\n            setCategories(cats => [inputValue,...cats])\r\n            setInputValue('');\r\n            }else{\r\n                alert('Debes ingresar al menos 4 letras')\r\n            }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n              type='text'\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategories.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategories\r\n","\r\n\r\n//Creamos una funcion asincrona para obtener la url de las imagenes\r\nexport const getGif = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=N36fdd956LuB03Wi36jmSo22PW3QvhHJ&limit=6&q=${encodeURI(category)}`;\r\n    const resp = await fetch(url);\r\n    const { data } =  await resp.json();\r\n\r\n   //Se realiza un map de los datos obtenidos de la respuesta de la API de Gifs\r\n   const gifs = data.map( img =>{\r\n    return {\r\n       id: img.id,\r\n       gif: img.images.downsized_medium.url,\r\n       title: img.title\r\n   }})\r\n\r\n   return gifs;\r\n}\r\n\r\nexport default getGif;","import { useEffect, useState } from \"react\"\r\n\r\nimport getGif from '../helpers/getGif'\r\n\r\n\r\nconst useFetchGifs = category => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n     //HOOK que me permite renderizar solo la primera vez un cierto componente o funcion.\r\n    useEffect(() => {\r\n            //getGif devuelve una promesa que devuelve un objeto, por lo cual debo hacer un .then\r\n            getGif(category)\r\n            .then( img => \r\n                setState(\r\n                {\r\n                data: img,\r\n                loading: false,\r\n                }\r\n              ))\r\n              \r\n    }, [category])\r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItems = ({id, title, gif}) => {\r\n\r\n    \r\n\r\n    return (\r\n\r\n        <div className=\"card border-dark animate__animated animate__fadeInDown animate__repeat-1\">\r\n                <img src={gif} className=\"card-img-top\" alt={title}/>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text\">{title}</p>\r\n                </div>\r\n        </div>\r\n                \r\n    )\r\n}\r\n\r\nGifGridItems.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGridItems\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItems from '../components/GifGridItems'\r\n\r\n//Se crea el componente grid de gif o imagenes.\r\nconst GifGrid = ({category}) => {\r\n\r\n       \r\n    const {loading, data:gifs} = useFetchGifs(category);\r\n\r\n    return (\r\n        <div className='container-fluid'>\r\n            <h3 className='align-self-center m-4'>{category}</h3>    \r\n        <div className='d-flex flex-row flex-wrap'>\r\n            { loading && <p className='animate__animated animate__flash animate__infinite'>Loading...</p> }\r\n            { gifs.map( gif => <GifGridItems key={gif.id} {...gif} /> ) }\r\n        </div>\r\n        <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid","\r\nimport React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategories from './components/AddCategories';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GiftExpertApp = props => {\r\n\r\n  const [categories, setCategories] = useState(['Clash of clans']);\r\n\r\n  // const addCategorie = () => setCategories([...categories, 'Call Of Duty']);\r\n\r\n  return (\r\n    <>\r\n      <h2>Gif Expert App</h2>\r\n      <AddCategories setCategories={setCategories}/>\r\n      <hr />\r\n        { \r\n          categories.map( category => \r\n          <GifGrid category={category} key={category} /> ) \r\n        }\r\n    </>\r\n  )\r\n}\r\n\r\nGiftExpertApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  GifExpertApp  from './GiftExpertApp';\nimport './index.css';\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render( <GifExpertApp />, divRoot);\n\n"],"sourceRoot":""}